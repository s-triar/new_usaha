<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <RootNamespace>new_usaha.WebUI</RootNamespace>
        <AssemblyName>new_usaha.WebUI</AssemblyName>
        <Nullable>enable</Nullable>
        <IsPackable>true</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44313</SpaProxyServerUrl>
        <!--<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
        <ImplicitUsings>enable</ImplicitUsings>
        <UserSecretsId>efad71c6-743c-4b87-9de8-f26d77146f6d</UserSecretsId>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj" />
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="8.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.2">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.ApiDescription.Client" Version="8.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.ApiDescription.Server" Version="8.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="8.0.2" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
        <PackageReference Include="NSwag.Annotations" Version="14.0.7" />
        <PackageReference Include="NSwag.ApiDescription.Client" Version="14.0.7">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="NSwag.AspNetCore" Version="14.0.7" />
        <PackageReference Include="NSwag.CodeGeneration" Version="14.0.7" />
        <PackageReference Include="NSwag.CodeGeneration.CSharp" Version="14.0.7" />
        <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="14.0.7" />
        <PackageReference Include="NSwag.Core" Version="14.0.7" />
        <PackageReference Include="NSwag.Generation" Version="14.0.7" />
        <PackageReference Include="NSwag.Generation.AspNetCore" Version="14.0.7" />
        <PackageReference Include="NSwag.MSBuild" Version="14.0.7">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="6.5.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="Controllers\MyEnterpriseController.cs~RF23ceb09b.TMP" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\app\application\auth-jwt\" />
    </ItemGroup>

    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

    <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
        <Exec ConsoleToMSBuild="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net80) run nswag.json /variables:Configuration=$(Configuration) " />
        <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=localhost" Command="$(NSwagExe_Net80) run nswag.json /variables:Configuration=$(Configuration)" />
    </Target>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
        <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
