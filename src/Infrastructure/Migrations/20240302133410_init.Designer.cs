// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using new_usaha.Infrastructure.Persistence;

#nullable disable

namespace new_usaha.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240302133410_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("new_usaha.Domain.Entities.AddStockHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("GoodsStockId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.Property<decimal>("PriceChange")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PricePerItem")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsStockId");

                    b.ToTable("AddStockHistories");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeJoin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnterpriseRoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("EnterpriseRoleId");

                    b.ToTable("EmployeeJoins");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeePresence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Approval")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EmployeePresenceCode_EndId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeePresenceCode_End_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeePresenceCode_StartId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeePresenceCode_Start_Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnterpriseEmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NumberHours")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserApproverId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePresenceCode_EndId");

                    b.HasIndex("EmployeePresenceCode_StartId");

                    b.HasIndex("EnterpriseEmployeeId");

                    b.ToTable("EmployeePresences");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeePresenceCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Tries")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("EmployeePresenceCodes");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EmployeeScheduleTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("EnterpriseEmployeeId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid>("EnterpriseEmployeeId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeScheduleTypeId");

                    b.HasIndex("EnterpriseEmployeeId1");

                    b.ToTable("EmployeeSchedules");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeScheduleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeScheduleTypes");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Enterprise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EnterpriseTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserOwnerId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("EnterpriseTypeId");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubDistrict")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("EnterpriseAddresses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EnterpriseTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseTypeId");

                    b.ToTable("EnterpriseClaims");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnterpriseRoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("EnterpriseRoleId");

                    b.ToTable("EnterpriseEmployees");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseEmployeeRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseEmployeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnterpriseRoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseEmployeeId");

                    b.HasIndex("EnterpriseRoleId");

                    b.ToTable("EnterpriseEmployeeRoles");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("EnterpriseRoles");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseClaimId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EnterpriseRoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseClaimId");

                    b.HasIndex("EnterpriseRoleId");

                    b.ToTable("EnterpriseRoleClaims");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseShift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("EnterpriseShifts");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Provide")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EnterpriseTypes");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Goods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AvailableOnline")
                        .HasColumnType("boolean");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Contain")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<int>("GoodsTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsWholesalerPriceAuto")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("ParentGoodsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("GoodsTypeId");

                    b.HasIndex("ParentGoodsId");

                    b.ToTable("Goodses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsAdjustment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DeltaStock")
                        .HasColumnType("integer");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsAdjustments");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("GoodsGroups");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsGroupMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("GoodsGroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsGroupId");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsGroupMembers");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsOrdered", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("DiscountItem")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DiscountItemTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsWholesalerPrice")
                        .HasColumnType("boolean");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PricePerItem")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PricePerItemAfterDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PriceTotalAfterDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PriceTotalFinal")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("OrderId");

                    b.ToTable("GoodsOrdereds");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsPhotos");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsPrices");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.Property<int>("Threshold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .IsUnique();

                    b.ToTable("GoodsStocks");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ParentGoodsTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentGoodsTypeId");

                    b.ToTable("GoodsTypes");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsWholesalePrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WholesalerMin")
                        .HasColumnType("integer");

                    b.Property<decimal>("WholesalerPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsWholesalePrices");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Return")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("To")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("UserOrderId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.OrderProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<long>("OrderStatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("OrderProgresses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NoQueue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Profit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("Profit");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.AddStockHistory", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.GoodsStock", "GoodsStock")
                        .WithMany("AddStockHistories")
                        .HasForeignKey("GoodsStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsStock");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeJoin", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseRole", "EnterpriseRole")
                        .WithMany("EmployeeJoins")
                        .HasForeignKey("EnterpriseRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("EnterpriseRole");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeePresence", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EmployeePresenceCode", "EmployeePresenceCode_End")
                        .WithMany()
                        .HasForeignKey("EmployeePresenceCode_EndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EmployeePresenceCode", "EmployeePresenceCode_Start")
                        .WithMany()
                        .HasForeignKey("EmployeePresenceCode_StartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EmployeePresences_EmployeePresenceCodes_EmployeePresenceCo~1");

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseEmployee", "EnterpriseEmployee")
                        .WithMany("EmployeePresences")
                        .HasForeignKey("EnterpriseEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeePresenceCode_End");

                    b.Navigation("EmployeePresenceCode_Start");

                    b.Navigation("EnterpriseEmployee");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeePresenceCode", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("EmployeePresenceCodes")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeSchedule", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EmployeeScheduleType", "EmployeeScheduleType")
                        .WithMany("EmployeeSchedules")
                        .HasForeignKey("EmployeeScheduleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseEmployee", "EnterpriseEmployee")
                        .WithMany("EmployeeSchedules")
                        .HasForeignKey("EnterpriseEmployeeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeScheduleType");

                    b.Navigation("EnterpriseEmployee");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Enterprise", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EnterpriseType", "EnterpriseType")
                        .WithMany("Enterprises")
                        .HasForeignKey("EnterpriseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseType");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseAddress", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("EnterpriseAddresses")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseClaim", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EnterpriseType", "EnterpriseType")
                        .WithMany("EnterpriseClaims")
                        .HasForeignKey("EnterpriseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseType");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseEmployee", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("EnterpriseEmployees")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseRole", "EnterpriseRole")
                        .WithMany("EnterpriseEmployees")
                        .HasForeignKey("EnterpriseRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("EnterpriseRole");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseEmployeeRole", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EnterpriseEmployee", "EnterpriseEmployee")
                        .WithMany()
                        .HasForeignKey("EnterpriseEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseRole", "EnterpriseRole")
                        .WithMany("EnterpriseEmployeeRoles")
                        .HasForeignKey("EnterpriseRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseEmployee");

                    b.Navigation("EnterpriseRole");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseRole", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseRoleClaim", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.EnterpriseClaim", "EnterpriseClaim")
                        .WithMany("EnterpriseRoleClaims")
                        .HasForeignKey("EnterpriseClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.EnterpriseRole", "EnterpriseRole")
                        .WithMany("EnterpriseRoleClaims")
                        .HasForeignKey("EnterpriseRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseClaim");

                    b.Navigation("EnterpriseRole");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseShift", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("EnterpriseShifts")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Goods", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("Goodses")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.GoodsType", "GoodsType")
                        .WithMany("Goodses")
                        .HasForeignKey("GoodsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.Goods", "ParentGoods")
                        .WithMany("ChildrenGoods")
                        .HasForeignKey("ParentGoodsId");

                    b.Navigation("Enterprise");

                    b.Navigation("GoodsType");

                    b.Navigation("ParentGoods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsAdjustment", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsGroup", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsGroupMember", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.GoodsGroup", "GoodsGroup")
                        .WithMany("Members")
                        .HasForeignKey("GoodsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsGroupMembers")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("GoodsGroup");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsOrdered", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsOrdereds")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.Order", "Order")
                        .WithMany("GoodsOrdereds")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsPhoto", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsPhotos")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsPrice", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsPrices")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsStock", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithOne("GoodsStock")
                        .HasForeignKey("new_usaha.Domain.Entities.GoodsStock", "GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsType", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.GoodsType", "ParentGoodsType")
                        .WithMany("SubGoodsTypes")
                        .HasForeignKey("ParentGoodsTypeId");

                    b.Navigation("ParentGoodsType");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsWholesalePrice", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsWholesalePrices")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Order", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Enterprise", "Enterprise")
                        .WithMany("Orders")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.OrderProgress", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Order", "Order")
                        .WithMany("OrderProgresses")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_usaha.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany("OrderProgresses")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Profit", b =>
                {
                    b.HasOne("new_usaha.Domain.Entities.Goods", "Goods")
                        .WithMany("GoodsProfits")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EmployeeScheduleType", b =>
                {
                    b.Navigation("EmployeeSchedules");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Enterprise", b =>
                {
                    b.Navigation("EmployeePresenceCodes");

                    b.Navigation("EnterpriseAddresses");

                    b.Navigation("EnterpriseEmployees");

                    b.Navigation("EnterpriseShifts");

                    b.Navigation("Goodses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseClaim", b =>
                {
                    b.Navigation("EnterpriseRoleClaims");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseEmployee", b =>
                {
                    b.Navigation("EmployeePresences");

                    b.Navigation("EmployeeSchedules");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseRole", b =>
                {
                    b.Navigation("EmployeeJoins");

                    b.Navigation("EnterpriseEmployeeRoles");

                    b.Navigation("EnterpriseEmployees");

                    b.Navigation("EnterpriseRoleClaims");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.EnterpriseType", b =>
                {
                    b.Navigation("EnterpriseClaims");

                    b.Navigation("Enterprises");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Goods", b =>
                {
                    b.Navigation("ChildrenGoods");

                    b.Navigation("GoodsGroupMembers");

                    b.Navigation("GoodsOrdereds");

                    b.Navigation("GoodsPhotos");

                    b.Navigation("GoodsPrices");

                    b.Navigation("GoodsProfits");

                    b.Navigation("GoodsStock")
                        .IsRequired();

                    b.Navigation("GoodsWholesalePrices");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsGroup", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsStock", b =>
                {
                    b.Navigation("AddStockHistories");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.GoodsType", b =>
                {
                    b.Navigation("Goodses");

                    b.Navigation("SubGoodsTypes");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.Order", b =>
                {
                    b.Navigation("GoodsOrdereds");

                    b.Navigation("OrderProgresses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("OrderProgresses");
                });

            modelBuilder.Entity("new_usaha.Domain.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
